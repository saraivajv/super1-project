version: '3.8'

services:
  # Serviço do Backend (Node.js/Express)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend_service
    ports:
      - "3000:3000"
    volumes:
      - ./backend:/app
      - /app/node_modules # Anula a montagem da pasta local node_modules
    env_file:
      - .env
    environment:
      - NODE_ENV=development
    depends_on:
      - db
      - cache
      - elasticsearch
    networks:
      - app-network

  # Serviço do Frontend (SvelteKit)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend_service
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: npm run dev -- --host
    networks:
      - app-network

  # Serviço do Banco de Dados (PostgreSQL)
  db:
    image: postgres:15
    container_name: postgres_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - app-network

  # Serviço de Cache (Redis)
  cache:
    image: redis:latest
    container_name: redis_cache
    ports:
      - "6379:6379"
    networks:
      - app-network

  # Serviço de Busca (Elasticsearch)
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.2
    container_name: elasticsearch_node
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - app-network

volumes:
  postgres_data:
  elasticsearch_data:

networks:
  app-network:
    driver: bridge
